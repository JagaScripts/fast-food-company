package es.jaga.fastfoodcompany.principal;

import es.jaga.fastfoodcompany.vista.PantallaDescuentos;
import es.jaga.fastfoodcompany.vista.PantallaTPV;
import es.jaga.fastfoodcompany.vista.PanelVentasPedidosFecha;
import es.jaga.fastfoodcompany.vista.PanelVentasProductosCliente;
import es.jaga.fastfoodcompany.vista.PantallaCategorias;
import es.jaga.fastfoodcompany.vista.PantallaClientes;
import es.jaga.fastfoodcompany.vista.PantallaProductos;
import java.awt.BorderLayout;
import static java.awt.Frame.MAXIMIZED_BOTH;
import java.awt.event.KeyEvent;
import javax.swing.JFileChooser;
import javax.swing.JPanel;
import java.io.IOException;
import java.io.File; 
import java.nio.file.CopyOption;
import java.nio.file.StandardCopyOption;
import java.nio.file.Paths;
import java.nio.file.Path;
import java.nio.file.Files;
import java.util.regex.Pattern;

/**
 *
 * @author Jose Antonio González Alcántara
 */
public class FFCJFrame extends javax.swing.JFrame {
    
    private static FFCJFrame instancia;
    private boolean inicio = false;
    private final String rutaImagenes;
    /**
     * Creates new form FFCJFrame
     */
    private FFCJFrame() {
        this.rutaImagenes = System.getProperty("user.dir") + "\\src\\img\\";
        initComponents();
        cargaPantalla(new PantallaTPV(this)); 
        this.inicio = true;
    }

    private static void setInstancia(){
         if (instancia == null) {
            instancia = new FFCJFrame();
        }
    }
    
    /**
     * Devuelve una intacia patron singlenton.
     * @return
     */
    public static FFCJFrame getInstancia(){
        setInstancia();
        return instancia;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlContenedor = new javax.swing.JPanel();
        mnbFFC = new javax.swing.JMenuBar();
        mnuTPV = new javax.swing.JMenu();
        mnuClientes = new javax.swing.JMenu();
        mnuProductos = new javax.swing.JMenu();
        mnuVentas = new javax.swing.JMenu();
        mniProductosCliente = new javax.swing.JMenuItem();
        mniPedidosFecha = new javax.swing.JMenuItem();
        mnuCategorias = new javax.swing.JMenu();
        mnuDescuentos = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Fast Food Company.");
        setPreferredSize(new java.awt.Dimension(800, 600));
        getContentPane().setLayout(new java.awt.BorderLayout(5, 5));

        pnlContenedor.setPreferredSize(new java.awt.Dimension(800, 600));
        pnlContenedor.setLayout(new java.awt.BorderLayout());
        getContentPane().add(pnlContenedor, java.awt.BorderLayout.CENTER);

        mnuTPV.setText("TPV");
        mnuTPV.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mnuTPVMouseClicked(evt);
            }
        });
        mnuTPV.addMenuKeyListener(new javax.swing.event.MenuKeyListener() {
            public void menuKeyPressed(javax.swing.event.MenuKeyEvent evt) {
                mnuTPVMenuKeyPressed(evt);
            }
            public void menuKeyReleased(javax.swing.event.MenuKeyEvent evt) {
            }
            public void menuKeyTyped(javax.swing.event.MenuKeyEvent evt) {
            }
        });
        mnbFFC.add(mnuTPV);

        mnuClientes.setText("Clientes");
        mnuClientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mnuClientesMouseClicked(evt);
            }
        });
        mnuClientes.addMenuKeyListener(new javax.swing.event.MenuKeyListener() {
            public void menuKeyPressed(javax.swing.event.MenuKeyEvent evt) {
                mnuClientesMenuKeyPressed(evt);
            }
            public void menuKeyReleased(javax.swing.event.MenuKeyEvent evt) {
            }
            public void menuKeyTyped(javax.swing.event.MenuKeyEvent evt) {
            }
        });
        mnbFFC.add(mnuClientes);

        mnuProductos.setText("Productos");
        mnuProductos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mnuProductosMouseClicked(evt);
            }
        });
        mnuProductos.addMenuKeyListener(new javax.swing.event.MenuKeyListener() {
            public void menuKeyPressed(javax.swing.event.MenuKeyEvent evt) {
                mnuProductosMenuKeyPressed(evt);
            }
            public void menuKeyReleased(javax.swing.event.MenuKeyEvent evt) {
            }
            public void menuKeyTyped(javax.swing.event.MenuKeyEvent evt) {
            }
        });
        mnbFFC.add(mnuProductos);

        mnuVentas.setText("Ventas");

        mniProductosCliente.setText("Productos cliente");
        mniProductosCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniProductosClienteActionPerformed(evt);
            }
        });
        mnuVentas.add(mniProductosCliente);

        mniPedidosFecha.setText("Pedidos fecha");
        mniPedidosFecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniPedidosFechaActionPerformed(evt);
            }
        });
        mnuVentas.add(mniPedidosFecha);

        mnbFFC.add(mnuVentas);

        mnuCategorias.setText("Categoría");
        mnuCategorias.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mnuCategoriasMouseClicked(evt);
            }
        });
        mnuCategorias.addMenuKeyListener(new javax.swing.event.MenuKeyListener() {
            public void menuKeyPressed(javax.swing.event.MenuKeyEvent evt) {
                mnuCategoriasMenuKeyPressed(evt);
            }
            public void menuKeyReleased(javax.swing.event.MenuKeyEvent evt) {
            }
            public void menuKeyTyped(javax.swing.event.MenuKeyEvent evt) {
            }
        });
        mnbFFC.add(mnuCategorias);

        mnuDescuentos.setText("Descuentos");
        mnuDescuentos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mnuDescuentosMouseClicked(evt);
            }
        });
        mnuDescuentos.addMenuKeyListener(new javax.swing.event.MenuKeyListener() {
            public void menuKeyPressed(javax.swing.event.MenuKeyEvent evt) {
                mnuDescuentosMenuKeyPressed(evt);
            }
            public void menuKeyReleased(javax.swing.event.MenuKeyEvent evt) {
            }
            public void menuKeyTyped(javax.swing.event.MenuKeyEvent evt) {
            }
        });
        mnbFFC.add(mnuDescuentos);

        setJMenuBar(mnbFFC);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mniProductosClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniProductosClienteActionPerformed
        cargaPantalla(new PanelVentasProductosCliente(this));
    }//GEN-LAST:event_mniProductosClienteActionPerformed

    private void mniPedidosFechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniPedidosFechaActionPerformed
        cargaPantalla(new PanelVentasPedidosFecha(this));
    }//GEN-LAST:event_mniPedidosFechaActionPerformed

    private void mnuTPVMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mnuTPVMouseClicked
        cargaPantalla(new PantallaTPV(this));
    }//GEN-LAST:event_mnuTPVMouseClicked

    private void mnuTPVMenuKeyPressed(javax.swing.event.MenuKeyEvent evt) {//GEN-FIRST:event_mnuTPVMenuKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER && mnuTPV.isSelected()) {
            cargaPantalla(new PantallaTPV(this));
        }
    }//GEN-LAST:event_mnuTPVMenuKeyPressed

    private void mnuClientesMenuKeyPressed(javax.swing.event.MenuKeyEvent evt) {//GEN-FIRST:event_mnuClientesMenuKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER && mnuClientes.isSelected()) {
            cargaPantalla(new PantallaClientes(this));
        } 
    }//GEN-LAST:event_mnuClientesMenuKeyPressed

    private void mnuClientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mnuClientesMouseClicked
        cargaPantalla(new PantallaClientes(this));
    }//GEN-LAST:event_mnuClientesMouseClicked

    private void mnuProductosMenuKeyPressed(javax.swing.event.MenuKeyEvent evt) {//GEN-FIRST:event_mnuProductosMenuKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER && mnuProductos.isSelected()) {
            cargaPantalla(new PantallaProductos(this));
        } 
    }//GEN-LAST:event_mnuProductosMenuKeyPressed

    private void mnuProductosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mnuProductosMouseClicked
        cargaPantalla(new PantallaProductos(this));
    }//GEN-LAST:event_mnuProductosMouseClicked

    private void mnuCategoriasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mnuCategoriasMouseClicked
        cargaPantalla(new PantallaCategorias(this));
    }//GEN-LAST:event_mnuCategoriasMouseClicked

    private void mnuCategoriasMenuKeyPressed(javax.swing.event.MenuKeyEvent evt) {//GEN-FIRST:event_mnuCategoriasMenuKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER && mnuCategorias.isSelected()) {
            cargaPantalla(new PantallaCategorias(this));
        }
    }//GEN-LAST:event_mnuCategoriasMenuKeyPressed

    private void mnuDescuentosMenuKeyPressed(javax.swing.event.MenuKeyEvent evt) {//GEN-FIRST:event_mnuDescuentosMenuKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER && mnuDescuentos.isSelected()) {
            cargaPantalla(new PantallaDescuentos(this));
        }
    }//GEN-LAST:event_mnuDescuentosMenuKeyPressed

    private void mnuDescuentosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mnuDescuentosMouseClicked
        cargaPantalla(new PantallaDescuentos(this));
    }//GEN-LAST:event_mnuDescuentosMouseClicked

    /**
     * @param args the command line arguments
     */
   /* public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
       /* try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FFCJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FFCJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FFCJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FFCJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
       /* java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FFCJFrame().setVisible(true);
            }
        });
    }*/

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuBar mnbFFC;
    private javax.swing.JMenuItem mniPedidosFecha;
    private javax.swing.JMenuItem mniProductosCliente;
    private javax.swing.JMenu mnuCategorias;
    private javax.swing.JMenu mnuClientes;
    private javax.swing.JMenu mnuDescuentos;
    private javax.swing.JMenu mnuProductos;
    private javax.swing.JMenu mnuTPV;
    private javax.swing.JMenu mnuVentas;
    private javax.swing.JPanel pnlContenedor;
    // End of variables declaration//GEN-END:variables
    
    private void cargaPantalla(JPanel panel){
        pnlContenedor.removeAll();
        pnlContenedor.setLayout(new BorderLayout(5, 5));
        pnlContenedor.add(panel);
        pack();
        if (panel instanceof PantallaTPV) {
            this.setExtendedState(MAXIMIZED_BOTH);
            if (this.inicio == true) {
                this.setResizable(false);
            }
        }else{
            this.setResizable(true);
        }
    }
    
    /**
     * Método que carga el selector de Archivos.
     * @return String ruta absoluta del archivo seleccionado.
     */
    public String cargarSelectorDeArchivos(){
        JFileChooser selectorDeArchivos = new JFileChooser();
        selectorDeArchivos.showOpenDialog(this);
        File archivo = selectorDeArchivos.getSelectedFile();
        if (archivo != null){
            return archivo.getAbsolutePath();
        }
        return null;
    }
    
    /**
     * Método que sobreescribe el fichero de destino, si existe, y copiar
     * los atributos, incluyendo los permisos rwx.
     * @param archivoOrigen
     * @param archivoDestino
     * @throws IOException
     */
    public void copiarFichero(String archivoOrigen, String archivoDestino) throws IOException {
        Path rutaOrigen = Paths.get(archivoOrigen);
        Path rutaDestino = Paths.get(archivoDestino);
        CopyOption[] options = new CopyOption[]{
          StandardCopyOption.REPLACE_EXISTING,
          StandardCopyOption.COPY_ATTRIBUTES
        }; 
        Files.copy(rutaOrigen, rutaDestino, options);
    }
    
    /**
     * Método que devuelve el nombre de archivo extraido de una ruta absoluta del archivo.
     * @param archivoOrigen
     * @return String nombre del archivo.
     */
    public String extraerNombreArchivo(String archivoOrigen){
        String separador = Pattern.quote("\\");
        String[] arrayRutaSeparada = archivoOrigen.split(separador);
        String nombreArchivoOrigen = arrayRutaSeparada[arrayRutaSeparada.length-1];
        return nombreArchivoOrigen;
    }

    /**
     * Metodo que devuelve la ruta de las imagenes del projecto.
     * @return ruta imagenes del proyecto.
     */
    public String getRutaImagenes() {
        return rutaImagenes;
    }
    
    
}
