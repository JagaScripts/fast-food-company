package es.jaga.fastfoodcompany.vista;

import es.jaga.fastfoodcompany.controlador.AccionCategoriaProducto;
import es.jaga.fastfoodcompany.controlador.AccionProductos;
import es.jaga.fastfoodcompany.modelo.entidades.Categoria;
import es.jaga.fastfoodcompany.modelo.entidades.Producto;
import es.jaga.fastfoodcompany.principal.FFCJFrame;
import java.awt.Image;
import java.io.IOException;
import java.util.Iterator;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 * Classe del panel de gestion de productos.
 * @author Jose Antonio González Alcántara
 */
public class PantallaProductos extends javax.swing.JPanel {

    private final FFCJFrame frame;
    private final AccionProductos acciones;
    private final AccionCategoriaProducto accionesLista;
    private Producto producto;
    private DefaultListModel listaModelo;
    private String imagenBoton;
    private Image noImage = new ImageIcon(getClass().getResource("/img/no_imagen.png")).getImage();
    private ImageIcon noImageIcon = new ImageIcon(this.noImage.getScaledInstance(80, 80, Image.SCALE_SMOOTH));
    /**
     * Creates new form PanelCrearProductos
     * @param frame
     */
    public PantallaProductos(FFCJFrame frame) {
        initComponents();
        this.listaModelo = new DefaultListModel();
        this.lstCategorias.setModel(listaModelo);
        this.frame = frame;
        this.acciones = new AccionProductos();
        this.accionesLista = new AccionCategoriaProducto();
        this.btnImagen.setIcon(this.noImageIcon);
        this.vaciarListaCategoria();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlFormulario = new javax.swing.JPanel();
        lblId = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        lblNombre = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        lblPrecio = new javax.swing.JLabel();
        txtPrecio = new javax.swing.JTextField();
        lblEuros = new javax.swing.JLabel();
        lblCategoria = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        btnImagen = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnBuscarNombre = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        jspCategoria = new javax.swing.JScrollPane();
        lstCategorias = new javax.swing.JList();
        btnLimpiarFormulario = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(800, 600));
        setLayout(new java.awt.BorderLayout(5, 5));

        pnlFormulario.setBorder(javax.swing.BorderFactory.createTitledBorder("Operaciones productos"));

        lblId.setText("Id:");

        txtId.setEditable(false);

        lblNombre.setText("Nombre:");

        lblPrecio.setText("Precio:");

        lblEuros.setText("€");

        lblCategoria.setText("Categoría:");

        jLabel1.setText("Imagen:");

        btnImagen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImagenActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnBuscarNombre.setText("Buscar por nombre");
        btnBuscarNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarNombreActionPerformed(evt);
            }
        });

        btnModificar.setText("Modificar");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        btnGuardar.setText("Insertar nuevo producto");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        lstCategorias.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        lstCategorias.setEnabled(false);
        jspCategoria.setViewportView(lstCategorias);

        btnLimpiarFormulario.setText("Limpiar formulario");
        btnLimpiarFormulario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarFormularioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlFormularioLayout = new javax.swing.GroupLayout(pnlFormulario);
        pnlFormulario.setLayout(pnlFormularioLayout);
        pnlFormularioLayout.setHorizontalGroup(
            pnlFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFormularioLayout.createSequentialGroup()
                .addGroup(pnlFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlFormularioLayout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addGroup(pnlFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblId)
                            .addComponent(lblNombre)
                            .addComponent(lblPrecio)
                            .addComponent(lblCategoria)
                            .addComponent(jLabel1))
                        .addGap(59, 59, 59))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlFormularioLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnLimpiarFormulario)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(pnlFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlFormularioLayout.createSequentialGroup()
                        .addComponent(btnBuscarNombre)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEliminar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnModificar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnGuardar))
                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlFormularioLayout.createSequentialGroup()
                        .addComponent(txtPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblEuros))
                    .addComponent(jspCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnImagen, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(205, Short.MAX_VALUE))
        );
        pnlFormularioLayout.setVerticalGroup(
            pnlFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFormularioLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblId)
                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblNombre)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblPrecio)
                    .addGroup(pnlFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblEuros)))
                .addGap(7, 7, 7)
                .addGroup(pnlFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(btnImagen, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblCategoria)
                    .addGroup(pnlFormularioLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jspCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(pnlFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGuardar)
                    .addComponent(btnModificar)
                    .addComponent(btnEliminar)
                    .addComponent(btnBuscarNombre)
                    .addComponent(btnLimpiarFormulario))
                .addContainerGap(145, Short.MAX_VALUE))
        );

        add(pnlFormulario, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void btnImagenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImagenActionPerformed
        try {
            String archivoOrigen = this.frame.cargarSelectorDeArchivos();
            String nombreArchivoOrigen = this.frame.extraerNombreArchivo(archivoOrigen);
            String archivoDestino = this.frame.getRutaImagenes() + nombreArchivoOrigen;
            this.frame.copiarFichero(archivoOrigen,archivoDestino);
            this.establecerImagenBoton(archivoDestino);
            this.setImagenBoton(nombreArchivoOrigen);
        } catch (IOException ex) {
            Logger.getLogger(PantallaProductos.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Error al abrir el archivo", "Atención",JOptionPane.WARNING_MESSAGE);
        } catch (NullPointerException nEx) {
            JOptionPane.showMessageDialog(null, "No se ha selecionado ningun archivo");
        }
    }//GEN-LAST:event_btnImagenActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        if (camposTiposCorrectos() && camposObligatoriosNoVacios()) {
            this.obtenerFormulario();
            if (this.acciones.insertar()) {
                this.vaciarFormulario();;
            }  
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
       if (camposTiposCorrectos() && camposObligatoriosNoVacios()) {
            this.obtenerFormulario();
            if (this.acciones.actualizar()) {
                this.vaciarFormulario();
            }  
        }  
    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        if (camposTiposCorrectos() && !txtNombre.getText().isEmpty()) {
            this.obtenerFormulario();
            if (this.acciones.borrar()) {
                this.vaciarFormulario();
            }  
        } else {
            JOptionPane.showMessageDialog(null, "El campo nombre es obligatorios"
                    + " y debe ser letras", "Atención",JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnBuscarNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarNombreActionPerformed
        if (!esNumero(txtNombre.getText()) && !txtNombre.getText().isEmpty()) {
            if (this.acciones.buscar(txtNombre.getText())) {
                this.establecerFormulario();
            }  
        } else {
            JOptionPane.showMessageDialog(null, "El campo nombre es obligatorios"
                    + " y debe ser letras", "Atención",JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnBuscarNombreActionPerformed

    private void btnLimpiarFormularioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarFormularioActionPerformed
        vaciarFormulario();
    }//GEN-LAST:event_btnLimpiarFormularioActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscarNombre;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnImagen;
    private javax.swing.JButton btnLimpiarFormulario;
    private javax.swing.JButton btnModificar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jspCategoria;
    private javax.swing.JLabel lblCategoria;
    private javax.swing.JLabel lblEuros;
    private javax.swing.JLabel lblId;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JLabel lblPrecio;
    private javax.swing.JList lstCategorias;
    private javax.swing.JPanel pnlFormulario;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtPrecio;
    // End of variables declaration//GEN-END:variables

    private void cargarListaCategoria(List listaElementos) {
        if (listaElementos != null) {
            Iterator<Categoria> iteratorLista = listaElementos.iterator();
            while (iteratorLista.hasNext()) {
                this.listaModelo.addElement(iteratorLista.next().getNombre());            
            }
        }
    }
    
    private void vaciarListaCategoria(){
        this.listaModelo.removeAllElements();
    }
    
     private void obtenerFormulario(){
          if (this.txtId.getText().isEmpty()) {
            this.txtId.setText("0");
        }
        Producto fProducto = new Producto(Integer.parseInt(this.txtId.getText()),this.txtNombre.getText(), 
                Float.parseFloat(this.txtPrecio.getText()),this.getImagenBoton());
        this.acciones.establecer(fProducto);
        this.producto = fProducto;
    }
    
    private void establecerFormulario(){
        this.producto = this.acciones.obtener();
        this.txtId.setText(String.valueOf(this.producto.getId()));
        this.txtPrecio.setText(String.valueOf(this.producto.getPrecio()));
        establecerImagenBoton(this.frame.getRutaImagenes() + this.producto.getImagen());
        this.cargarListaCategoria(this.producto.getCategorias());
        this.txtNombre.setText(this.producto.getNombre());
    }
    
    private void vaciarFormulario(){
        this.txtId.setText("");
        this.txtNombre.setText("");
        this.txtPrecio.setText("");
        this.imagenBoton = getClass().getResource("/img/no_imagen.png").toString();
        this.establecerImagenBoton(this.imagenBoton);
        this.vaciarListaCategoria();
    }
        
    private void establecerImagenBoton(String nombreArchivoOrigen){
        Image imagenOriginal = new ImageIcon(nombreArchivoOrigen).getImage();
        ImageIcon imagenBotonEscalado = new ImageIcon(imagenOriginal.getScaledInstance(80, 80, Image.SCALE_SMOOTH));
        this.btnImagen.setIcon(imagenBotonEscalado);
    }

    /**
     *
     * @return
     */
    public String getImagenBoton() {
        return imagenBoton;
    }

    /**
     *
     * @param imagenBoton
     */
    public void setImagenBoton(String imagenBoton) {
        this.imagenBoton = imagenBoton;
    }
    
    private boolean camposObligatoriosNoVacios(){  
        if (this.txtNombre.getText().isEmpty() || this.txtPrecio.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Los campos nombre y precio son obligatorios", "Atención",JOptionPane.WARNING_MESSAGE);
            return false;
        }
        return true;
    }
    
    private boolean camposTiposCorrectos(){
        if (esNumero(txtPrecio.getText()) && !esNumero(txtNombre.getText())) {
            return true;
        } else {
            JOptionPane.showMessageDialog(null, "El campo nombre deben ser letras"
                     + " y el campo precio deben ser números", "Atención",JOptionPane.WARNING_MESSAGE);
            return false;
        }
    }
    
    private boolean esNumero(String texto){
         try {
            Float.parseFloat(texto);
            return true;
        } catch (Exception ex) {
            return false;
        }
    }
 
}
