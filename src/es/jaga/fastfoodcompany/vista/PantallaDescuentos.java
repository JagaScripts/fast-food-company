package es.jaga.fastfoodcompany.vista;

import es.jaga.fastfoodcompany.controlador.AccionDescuentos;
import es.jaga.fastfoodcompany.modelo.entidades.Descuento;
import es.jaga.fastfoodcompany.principal.FFCJFrame;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;

/**
 * Classe del panel de gestion de Descuentos.
 * @author Jose Antonio González Alcántara
 */
public class PantallaDescuentos extends javax.swing.JPanel {

    private final FFCJFrame frame;
    private final AccionDescuentos acciones;
    private Descuento descuento;
    private final DateFormat formatoFecha =  new SimpleDateFormat("dd/MM/yyyy");
    /**
     * Creates new form PanelDescuentos
     * @param frame
     */
    public PantallaDescuentos(FFCJFrame frame) {
        initComponents();
        this.frame = frame;
        this.acciones = new AccionDescuentos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlFormulario = new javax.swing.JPanel();
        lblClave = new javax.swing.JLabel();
        lblCantidad = new javax.swing.JLabel();
        lblIdCliente = new javax.swing.JLabel();
        lblCaducidad = new javax.swing.JLabel();
        txtClave = new javax.swing.JTextField();
        txtCantidad = new javax.swing.JTextField();
        txtIdCliente = new javax.swing.JTextField();
        txtCaducidad = new javax.swing.JTextField();
        lblPorciento = new javax.swing.JLabel();
        btnGuardar = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnBuscarIdCliente = new javax.swing.JButton();
        lblFormatoFecha = new javax.swing.JLabel();

        setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        setPreferredSize(new java.awt.Dimension(800, 600));
        setLayout(new java.awt.BorderLayout(5, 5));

        pnlFormulario.setBorder(javax.swing.BorderFactory.createTitledBorder("Operaciones descuentos"));

        lblClave.setText("Clave:");

        lblCantidad.setText("Cantidad:");

        lblIdCliente.setText("Id Cliente:");

        lblCaducidad.setText("Caducidad:");

        txtClave.setEditable(false);

        lblPorciento.setText("% entre 1% y 50%");

        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnModificar.setText("Modificar");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnBuscarIdCliente.setText("Buscar por id cliente");
        btnBuscarIdCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarIdClienteActionPerformed(evt);
            }
        });

        lblFormatoFecha.setText("dd/MM/yyyy");

        javax.swing.GroupLayout pnlFormularioLayout = new javax.swing.GroupLayout(pnlFormulario);
        pnlFormulario.setLayout(pnlFormularioLayout);
        pnlFormularioLayout.setHorizontalGroup(
            pnlFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFormularioLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(pnlFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblClave)
                    .addComponent(lblCantidad)
                    .addComponent(lblIdCliente)
                    .addComponent(lblCaducidad))
                .addGap(52, 52, 52)
                .addGroup(pnlFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlFormularioLayout.createSequentialGroup()
                        .addComponent(btnBuscarIdCliente)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEliminar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnModificar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnGuardar))
                    .addComponent(txtClave, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtIdCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlFormularioLayout.createSequentialGroup()
                        .addComponent(txtCaducidad, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblFormatoFecha))
                    .addGroup(pnlFormularioLayout.createSequentialGroup()
                        .addComponent(txtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblPorciento)))
                .addContainerGap(279, Short.MAX_VALUE))
        );
        pnlFormularioLayout.setVerticalGroup(
            pnlFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFormularioLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblClave)
                    .addComponent(txtClave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCantidad)
                    .addComponent(txtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPorciento))
                .addGap(18, 18, 18)
                .addGroup(pnlFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblIdCliente)
                    .addComponent(txtIdCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCaducidad)
                    .addComponent(txtCaducidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblFormatoFecha))
                .addGap(18, 18, 18)
                .addGroup(pnlFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGuardar)
                    .addComponent(btnModificar)
                    .addComponent(btnEliminar)
                    .addComponent(btnBuscarIdCliente))
                .addContainerGap(386, Short.MAX_VALUE))
        );

        add(pnlFormulario, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void btnBuscarIdClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarIdClienteActionPerformed
        String idCliente = txtIdCliente.getText();
        if (esNumero(idCliente) && !idCliente.isEmpty()) {
            if (this.acciones.buscar(txtIdCliente.getText())) {
                this.establecerFormulario();
            }  
        } else {
            JOptionPane.showMessageDialog(null, "El campo id del cliente es obligatorios"
                    + " y debe ser números", "Atención",JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnBuscarIdClienteActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        String idCliente = txtIdCliente.getText();
        if (esNumero(idCliente) && !idCliente.isEmpty()) {
            this.obtenerFormulario();
            if (this.acciones.borrar()) {
                this.vaciarFormulario();
            }  
        } else {
            JOptionPane.showMessageDialog(null, "El campo id del cliente es obligatorios"
                    + " y debe ser números", "Atención",JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        if (this.txtClave.isEditable()) {
            String fecha = this.txtCaducidad.getText();
            if (camposObligatoriosNoVacios() && camposTiposCorrectos() && formatoFechaCorrecta(fecha)) {
                this.obtenerFormulario();
                if (this.acciones.actualizar()) {
                    this.vaciarFormulario();
                }  
            } else {
                JOptionPane.showMessageDialog(null, "Los campos id del Cliente, descuento y fecha de caducidad son obligatorios,\n "
                    + " el cliente y descuento debe ser números y la fecha de formato correcto", "Atención",JOptionPane.WARNING_MESSAGE);
            }
            this.txtClave.setEditable(false);
            this.txtCaducidad.setEditable(true);
            this.txtCantidad.setEditable(true);
            this.txtIdCliente.setEditable(true);
            this.btnBuscarIdCliente.setEnabled(true);
            this.btnEliminar.setEnabled(true);
            this.btnGuardar.setEnabled(true);
        } else {
            JOptionPane.showMessageDialog(null, "Introduce la clave del descuento");
            this.txtClave.setEditable(true);
            this.txtCaducidad.setEditable(false);
            this.txtCantidad.setEditable(false);
            this.txtIdCliente.setEditable(false);
            this.btnBuscarIdCliente.setEnabled(false);
            this.btnEliminar.setEnabled(false);
            this.btnGuardar.setEnabled(false);
        }
    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        if (camposTiposCorrectos() && camposObligatoriosNoVacios()) {
            this.obtenerFormulario();
            if (this.acciones.insertar()) {
                this.vaciarFormulario();
            }  
        }
    }//GEN-LAST:event_btnGuardarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscarIdCliente;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JLabel lblCaducidad;
    private javax.swing.JLabel lblCantidad;
    private javax.swing.JLabel lblClave;
    private javax.swing.JLabel lblFormatoFecha;
    private javax.swing.JLabel lblIdCliente;
    private javax.swing.JLabel lblPorciento;
    private javax.swing.JPanel pnlFormulario;
    private javax.swing.JTextField txtCaducidad;
    private javax.swing.JTextField txtCantidad;
    private javax.swing.JTextField txtClave;
    private javax.swing.JTextField txtIdCliente;
    // End of variables declaration//GEN-END:variables
   
    private void obtenerFormulario(){
        Descuento fDescuento = null;
        if (this.txtCantidad.getText().isEmpty()) {
            this.txtCantidad.setText("0");
        }
        if (this.txtClave.getText().isEmpty()) {
            fDescuento = new Descuento(Integer.parseInt(this.txtCantidad.getText()),Integer.parseInt(this.txtIdCliente.getText()));
        } else {
            fDescuento = new Descuento(Integer.parseInt(this.txtCantidad.getText()),Integer.parseInt(this.txtIdCliente.getText()),
                                       this.txtCaducidad.getText(), this.txtClave.getText());
        }
        this.acciones.establecer(fDescuento);
        this.descuento = fDescuento;
    }
    
    private void establecerFormulario(){
        this.descuento = this.acciones.obtener();
        this.txtIdCliente.setText(String.valueOf(this.descuento.getCliente()));
        this.txtCaducidad.setText(this.descuento.getCaducidad());
        this.txtClave.setText(this.descuento.getClave());
        this.txtCantidad.setText(String.valueOf(this.descuento.getCantidad()));
    }
    
    private void vaciarFormulario(){
        this.txtIdCliente.setText("");
        this.txtCaducidad.setText("");
        this.txtClave.setText("");
        this.txtCantidad.setText("");
    }
    
    private boolean camposObligatoriosNoVacios(){  
        if (this.txtCantidad.getText().isEmpty() || this.txtIdCliente.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "El campo cantidad y el id del cliente son obligatorios", "Atención",JOptionPane.WARNING_MESSAGE);
            return false;
        }
        return true;
    }
    
    private boolean camposTiposCorrectos(){
        if (esProcentaje() && esNumero(txtCantidad.getText()) && esNumero(txtIdCliente.getText())) {
            return true;
        } else {
            JOptionPane.showMessageDialog(null, "El campo nombre deben ser letras"
            , "Atención",JOptionPane.WARNING_MESSAGE);
            return false;
        }
    }
    
    private boolean esNumero(String texto){
         try {
            Integer.parseInt(texto);
            return true;
        } catch (Exception ex) {
            return false;
        }
    }
    
    private boolean esProcentaje(){
        String texto = txtCantidad.getText();
        int cantidad = Integer.parseInt(texto);
        return cantidad >= 1 && cantidad <= 50;
    }
    
    private boolean formatoFechaCorrecta(String fecha){
        try {
            if (!fecha.isEmpty()) {
                formatoFecha.setLenient(false);
                formatoFecha.parse(fecha);
            }
        } catch (Exception e) {
            return false;
        }
        return true;
    }
}
